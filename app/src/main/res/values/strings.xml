<resources>
    <string name="app_name">Accessibility 101</string>

    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>

    <string name="action_example">Example action</string>

    <string name="action_settings">Settings</string>

    <!-- Global Story Strings-->
    <string name="aac_tab_title_about">About</string>
    <string name="aac_tab_title_broken">Broken</string>
    <string name="aac_tab_title_fixed">Fixed</string>

    <!-- Intro Story Strings-->
    <string name="aac_intro_title">Introduction</string>
    <string name="aac_intro_tab_1">Accessibility 101</string>

    <string name="aac_intro_about_paragraph1">Welcome to Accessibility 101.  This app will take you through a set of demonstrations that aim to help developers understand the implications the Android Accessibility APIs have for users with disabilities.\n\nBe sure to enable <a href="http://support.google.com/accessibility/android/answer/6007100?hl=en">TalkBack</a>.  The demonstrations in this app use Android\'s accessibility APIs and are only meaningful in this context.  It is also helpful to enable the <a href="http://support.google.com/accessibility/android/answer/6007100?hl=en">TalkBack</a> shortcut, so you can turn <a href="http://support.google.com/accessibility/android/answer/6007100?hl=en">TalkBack</a> on and off easily.</string>

    <string name="aac_intro_deque_heading">About Deque</string>
    <string name="aac_intro_deque_paragraph1">Accessibility is both our mission and our passion and something we have been doing for over ten years with major corporations, government agencies, and other organizations. Every Deque team member – some of whom have been with the company since it was founded in 1999 – is passionate about the importance of accessibility in the digital world and in helping customers achieve the outcomes that accessibility provides. Our culture focuses heavily on these key pillars, in hiring, evaluation, and career paths and we have fostered a team of website accessibility experts.  Feel free to <a href="http://accessibility.deque.com/contact-deque-today">Contact Us</a> or visit our <a href="http://www.deque.com/">website</a> for more information.</string>

    <!-- Labels Story Strings-->
    <string name="aac_labels_title">Labels</string>

    <string name="aac_labels_content_description">This is a content description.</string>

    <string name="aac_labels_about_introduction">In the Android Accessibility world there are multiple ways of providing alternate text for a control.  The <a href="http://developer.android.com/training/accessibility/accessible-app.html#contentdesc">content description</a> is the most basic.  However, you can also use the <a href="http://developer.android.com/reference/android/R.attr.html#labelFor">label for</a> attribute.  By marking a text element as the <a href="http://developer.android.com/reference/android/R.attr.html#labelFor">label for</a> something, you associate a visible label with the announcement in TalkBack.  While not all controls require a <a href="http://developer.android.com/training/accessibility/accessible-app.html#contentdesc">content description</a>, all controls that do not contain text as a primary feature of the control, absolutely require a label of some kind!  Labels are not an Android element, it is a word we have chosen to represent the presence of either a <a href="http://developer.android.com/reference/android/R.attr.html#labelFor">label for</a> or a <a href="http://developer.android.com/training/accessibility/accessible-app.html#contentdesc">content description</a>.  In general, the <a href="http://developer.android.com/reference/android/R.attr.html#labelFor">label for</a> property should be preferred.</string>

    <string name="aac_labels_about_heading_1"><i>Content Description</i> Attribute</string>
    <string name="aac_labels_about_visible_text_1">Visible Text 1</string>
    <string name="aac_labels_about_paragraph_1"><i>Content descriptions</i> are similar to alt text in HTML.  They provide a control that otherwise has no string content, with a description of what the control is.  When writing <a href="http://developer.android.com/training/accessibility/accessible-app.html#contentdesc">content description</a> be sure to consider the basic ARIA name, role, state, and value.  Though remember that TalkBack and the Android framework attempt to figure some of this out for you, based on the type of control you are using.  Test your application with TalkBack to ensure everythign is announced properly.</string>

    <string name="aac_labels_about_heading_2">Label For Attribute</string>
    <string name="aac_labels_about_visible_text_2">Visible Text 2</string>
    <string name="aac_labels_about_paragraph_2">The <a href="http://developer.android.com/reference/android/R.attr.html#labelFor">label for</a> attribute allows you to set a visual label as labelling a control.  This way, instead of duplicating the text of the label in the control\'s <a href="http://developer.android.com/training/accessibility/accessible-app.html#contentdesc">content description</a>, you simple create an association bewteen the two elements.  Then the control will announce the visible text, and remove any ambiguity about which control a label belongs to.</string>

    <string name="aac_labels_about_heading_3">Mixing Them Together</string>
    <string name="aac_labels_about_visible_text_3">Visible Text 3</string>
    <string name="aac_labels_about_paragraph_3">Using both a <a href="http://developer.android.com/reference/android/R.attr.html#labelFor">label for</a> and a <a href="http://developer.android.com/training/accessibility/accessible-app.html#contentdesc">content description</a> is generally not required, and unless handled carefully can be confusing.  If a control requires more context than a simple label can provide, it may be better to consider elements of your design that would require this.  Though, a <a href="http://developer.android.com/training/accessibility/accessible-app.html#contentdesc">content description</a> can be used to group sets of controls, that require additional labelling otherwise.  Just be careful not to overload TalkBack users with information or worse, duplicate information.</string>

    <string name="aac_labels_broken_content_heading">Background Color Components</string>
    <string name="aac_labels_setting_1">Red</string>
    <string name="aac_labels_setting_2">Green</string>
    <string name="aac_labels_setting_3">Blue</string>

    <string name="aac_labels_broken_conclusion">The labels are not associated with their controls.  As you tab across the various labels you are not sure whether the label refers to the value before, or after the visual label.</string>

    <string name="aac_labels_fixed_conclusion">By adding the <a href="http://developer.android.com/reference/android/R.attr.html#labelFor">label for</a> attribute to the labels we create an association with the controls.  Now, when we highlight the control, we know which switch will toggle which setting.</string>

    <!-- ContDesc Story Strings-->
    <string name="aac_cont_desc_title">Content Descriptions</string>

    <string name="aac_cont_desc_about_intro">In the Android Accessibility world there are multiple ways of providing alternate text for a control. The contentDescription attribute is the most basic. It provides a control, ImageView, or other focusable object, that otherwise has no string content, with a description of what the object is. Content descriptions also allow accessibility services, like TalkBack, to describe the content to users, as the name implies. When writing content descriptions, be sure to consider the basic ARIA name, roe, state, and value. Remember that TalkBack and the Android framework attempt to figure some of this out for you, based on the type of object you are using, but be sure to test your application with TalkBack to ensure everything is announced properly.</string>
    <string name="aac_cont_desc_about_heading_1">Null Content Description</string>
    <string name="aac_cont_desc_about_heading_2">Empty Content Description</string>
    <string name="aac_cont_desc_about_heading_3">When to Use Content Descriptions</string>
    <string name="aac_cont_desc_about_heading_4">Duplicated Information</string>
    <string name="aac_cont_desc_about_heading_5">How to Fix It</string>
    <string name="aac_cont_desc_about_paragraph_1_null">This image has a null content description, so you can\'t focus on it using TalkBack. A TalkBack user would have no way of knowing this image is here and could not obtain information about it.</string>
    <string name="aac_cont_desc_about_paragraph_2_empty">This image has a blank string as a content description, so you can focus on it with TalkBack, but the description is a default image number and that the image is \"unlabeled,\" which is entirely unhelpful. This occurs when the content description is hard-coded in xml as a blank string. If it is hardcoded as an empty string or coded as an empty or blank string in a separate strings.xml file, the same effects as a null content description are seen.</string>
    <string name="aac_cont_desc_about_paragraph_3_when_to_use">Content descriptions should be used when there is a focusable object, such as an ImageView or control to provide information describing the object. Content descriptions do not need to (and should not) be used for background images, decorative borders, or other things that are not pertinent to the information being conveyed through your app or website.</string>
    <string name="aac_cont_desc_about_paragraph_4_duplicated_info">This image\'s content description exactly duplicates the visual label and thus provides no new information to a TalkBack user.</string>
    <string name="aac_cont_desc_about_paragraph_5_fix_it">Fixing this accessibility issue is simple. All you need to do is add a content description to objects that display pertinent information or perform a function such as non-decorative ImageViews, Switches, Buttons, other controls, etc. These content descriptions should be concise, but as descriptive as possible in order to provide a TalkBack user with the information necessary to interpret the object. The first two issues, null and empty content descriptions, can be fixed in this way. To fix the third issue, duplicated information, be sure to think about the best combination of content description and visual label so as not to be redundant, but still provide necessary information for a TalkBack user. </string>
    <string name="aac_cont_desc_about_fish_cont_desc">fish image</string>
    <string name="aac_cont_desc_about_fish_label">Fish Image</string>

    <string name="aac_cont_desc_broken_heading_1">Look at these drawings of animals!</string>
    <string name="aac_cont_desc_broken_fish_label">Here is a drawing of a fish.</string>
    <string name="aac_cont_desc_broken_fish_cont_desc">Drawing of a fish</string>
    <string name="aac_cont_desc_broken_dog_label">Here is a drawing of a dog.</string>
    <string name="aac_cont_desc_broken_cat_label">Here is a drawing of a cat.</string>
    <string name="aac_cont_desc_broken_conclusion">Notice that the first image has duplicated information in the label and content description. While a TalkBack user knows what the image is, he or she does not gain any useful information from having both read out to him or her and are bogged down by redundant information.\n\nNotice that the second image has a content description, so it is focusable using TalkBack, but the content description is a blank string, so TalkBack describes the image by its image number and tells you that it is unlabeled. This limits a TalkBack user\'s access to information about your products, services, etc. Android Studio does not flag this as an accessibility warning. \n\nNotice that the third image is not focusable because it has a null content description. This means that a TalkBack user would not even know that this image exists and would miss out on this information on your app or website. Android Studio does flag this as an accessibility warning.</string>

    <string name="aac_cont_desc_fixed_heading_1">Look at these drawings of animals!</string>
    <string name="aac_cont_desc_fixed_intro">These two images are now accessible to a TalkBack user because they both have a content description.</string>
    <string name="aac_cont_desc_fixed_cat_cont_desc">Red cat on yellow background</string>
    <string name="aac_cont_desc_fixed_dog_cont_desc">Yellow dog on blue background</string>
    <string name="aac_cont_desc_fixed_fish_cont_desc">Yellow fish on red background</string>
    <string name="aac_cont_desc_fixed_fish_label">Here is a drawing of a fish.</string>
    <string name="aac_cont_desc_fixed_dog_label"> Here is a drawing of a dog.</string>
    <string name="aac_cont_desc_fixed_cat_label">Here is a drawing of a cat.</string>
    <string name="aac_cont_desc_fixed_conclusion">By assigning concise, descriptive content descriptions that provide different information than the labels to these ImageViews, you can now use TalkBack to gain information about these objects.</string>

    <string name="hello_blank_fragment">Hello Blank Fragment</string>

</resources>
