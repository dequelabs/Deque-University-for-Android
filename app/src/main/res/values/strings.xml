<resources>
    <string name="app_name">Accessibility 101</string>

    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>

    <string name="action_example">Example action</string>

    <string name="action_settings">Settings</string>

    <!-- Global Story Strings-->
    <string name="story_tab_title_about">About</string>
    <string name="story_tab_title_broken">Broken</string>
    <string name="story_tab_title_fixed">Fixed</string>

    <!-- Intro Story Strings-->
    <string name="intro_title">Introduction</string>
    <string name="intro_tab_1">About</string>
    <string name="intro_tab_2">Deque</string>

    <string name="intro_about_paragraph1">Welcome to Accessibility 101.  This app will take you through a set of demonstrations that aim to help developers understand the implications the Android Accessibility APIs have for users with disabilities.  Below are a few tips for getting the most out of this application. \n\n - Enable TalkBack\n - Enable TalkBack Shortcut</string>

    <string name="intro_deque_paragraph1">Accessibility is both our mission and our passion and something we have been doing for over ten years with major corporations, government agencies, and other organizations. Every Deque team member – some of whom have been with the company since it was founded in 1999 – is passionate about the importance of accessibility in the digital world and in helping customers achieve the outcomes that accessibility provides. Our culture focuses heavily on these key pillars, in hiring, evaluation, and career paths and we have fostered a team of website accessibility experts.</string>

    <string name="intro_deque_contact_button"><u>Contact Us</u></string>

    <!-- Labels Story Strings-->
    <string name="aac_labels_title">Labels</string>

    <string name="aac_labels_about_introduction">In the Android Accessibility world there are multiple ways of providing alternate text for a control.  The contentDescription is the most basic.  However, you can also use the labelFor attribute.  By marking a text element as the "labelFor" something, you associate a visible label with the announcement in TalkBack.  While not all controls require a contentDescription, all controls that do not contain text as a primary feature of the control, absolutely require a label of some kind!  Labels are not an Android element, it is a word we have chosen to represent the presence of either a labelFor or a contentDescription.  In general, the labelFor property should be preferred.</string>

    <string name="aac_labels_about_heading_1"><i>Content Description</i> Attribute</string>
    <string name="aac_labels_about_visible_text_1">Visible Text 1</string>
    <string name="aac_labels_about_paragraph_1"><i>Content descriptions</i> are similar to alt text in HTML.  They provide a control that otherwise has no string content, with a description of what the control is.  When writing <i>content descriptions</i> be sure to consider the basic ARIA name, role, state, and value.  Though remember that TalkBack and the Android framework attempt to figure some of this out for you, based on the type of control you are using.  Test your application with TalkBack to ensure everythign is announced properly.</string>

    <string name="aac_labels_about_heading_2"><i>Label For</i> Attribute</string>
    <string name="aac_labels_about_visible_text_2">Visible Text 2</string>
    <string name="aac_labels_about_paragraph_2">The <i>Label For</i> attribute allows you to set a visual label as labelling a control.  This way, instead of duplicating the text of the label in the control\'s <i>content description</i>, you simple create an association bewteen the two elements.  Then the control will announce the visible text, and remove any ambiguity about which control a label belongs to.</string>

    <string name="aac_labels_about_heading_3">Mixing Them Together</string>
    <string name="aac_labels_about_visible_text_3">Visible Text 3</string>
    <string name="aac_labels_about_paragraph_3">Using both a <i>label for</i> and a <i>content description</i> is generally not required, and unless handled carefully can be confusing.  If a control requires more context than a simple label can provide, it may be better to consider elements of your design that would require this.  Though, a <i>content description</i> can be used to group sets of controls, that require additional labelling otherwise.  Just be careful not to overload TalkBack users with information or worse, duplicate information.</string>

    <string name="aac_labels_broken_content_heading">Background Color Components</string>
    <string name="aac_labels_setting_1">Red</string>
    <string name="aac_labels_setting_2">Green</string>
    <string name="aac_labels_setting_3">Blue</string>

    <string name="aac_labels_broken_conclusion">The labels are not assoicated with their controls.  As you tab across the various labels you are not sure whether the label refers to the value before, or after the visual label.</string>

    <string name="aac_labels_fixed_conclusion">By adding the <i>label for</i> attribute to the labels we create an association with the controls.  Now, when we highlight the control, we know which switch will toggle which setting.</string>

    <!-- ContDesc Story Strings-->
    <string name="aac_cont_desc_title">Content Descriptions</string>

    <string name="aac_cont_desc_about_intro">In the Android Accessibility world there are multiple ways of providing alternate text for a control.  The contentDescription attribute is the most basic. The provide a control, ImageView or other focusable object, that otherwise has no string content, with a description of what the object is. They also allow accessibility services, like TalkBack, to describe the content to users, as the name implies. When writing content descriptions, be sure to consider the basic ARIA name, roe, state, and value. Remember that TalkBack and the Android framework attempt to figure some of this out for you, based on the type of object you are using, but be sure to test your application with TalkBack to ensure everything is announced properly.</string>
    <string name="aac_cont_desc_about_heading_1">Issue - Null Content Description</string>
    <string name="aac_cont_desc_about_heading_2">Issue - Empty Content Description</string>
    <string name="aac_cont_desc_about_heading_3">When to Use Content Descriptions</string>
    <string name="aac_cont_desc_about_paragraph_1_null">This image has a null content description and can\'t be focused on using TalkBack or describe the image to a user.</string>
    <string name="aac_cont_desc_about_paragraph_2_empty">This image has an empty string as a content description, thus TalkBack can\'t describe the image.</string>
    <string name="aac_cont_desc_about_paragraph_3_when_to_use">Content descriptions should be used when there is a focusable object, such as an ImageView, that does not have a visible label associated with it. Content descriptions do not need to (and should not) be used for background images, decorative borders, or other things that are not pertinent to the information being conveyed through your app or website.</string>

    <string name="aac_cont_desc_broken_cat_pic_label">Null content description</string>
    <string name="aac_cont_desc_broken_conclusion">Notice that the first image is not focusable because it has a null content description. This means that someone using TalkBack would not even know that this image exists and would miss out on this information on your app or website.\n\nNotice that the second image has a content description, so it is focusable using TalkBack, but it is an empty string. This would not provide any useful information about the image to someone using TalkBack and would still limit TalkBack users\' access to information.</string>
    <string name="aac_cont_desc_broken_dog_pic_label">Empty content description</string>

    <string name="aac_cont_desc_fixed_cat_pic_label">Content Description = \"cat image\"</string>
    <string name="aac_cont_desc_fixed_cat_cont_desc">cat image</string>
    <string name="aac_cont_desc_fixed_dog_pic_label">Content Description = \"dog image\"</string>
    <string name="aac_cont_desc_fixed_dog_cont_desc">dog image</string>
    <string name="aac_cont_desc_fixed_conclusion">By assigning a concise, descriptive content description to these images, you can now use TalkBack to gain information about these objects.</string>

    <string name="hello_blank_fragment">Hello Blank Fragment</string>

</resources>
